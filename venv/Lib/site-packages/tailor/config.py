# -*- coding: utf-8 -*-
from dotenv import load_dotenv

load_dotenv()  # Automatically load environment variables from a '.env' file.

import os

import ruamel.yaml as yaml

# set defaults
RUNDIR_TIME_FORMAT = '%Y-%m-%d-%H-%M-%S-%f'
LOGGING_FORMAT = '%(asctime)s %(levelname)s %(message)s'
USERNAME = 'Unknown'
REFERENCE_PROVIDER = 'LOCAL_CONFIG_FILE'

homedir = os.path.expanduser('~')


def is_development_mode() -> bool:
    return "development" not in os.environ.keys() and "CI" not in os.environ.keys()


def load_user_config() -> dict:
    # load config values from ~/.tailor/config.yaml:
    config_file_homedir = os.path.join(homedir, '.tailor', 'config.yaml')
    config_file_curdir = os.path.join(os.path.curdir, '.tailor', 'config.yaml')
    config_file = None
    if os.path.isfile(config_file_curdir):
        config_file = config_file_curdir
    elif os.path.isfile(config_file_homedir):
        config_file = config_file_homedir
    else:
        if "development" not in os.environ.keys() and "CI" not in os.environ.keys():
            raise AssertionError(f"Missing Tailor config file. Looked in "
                                 f"{config_file_curdir} and {config_file_homedir}")
        else:
            print("Warning: no Tailor config file found")
            return {}
    with open(config_file, 'r', encoding="utf-8") as f:
        cfg = yaml.safe_load(f)
        cfg['REFERENCE_PROVIDER'] = REFERENCE_PROVIDER
        return cfg


__default_db = 'sqlite:///:memory:'
__admin_db_uri = os.getenv('SQLALCHEMY_DATABASE_URI') or __default_db
if __admin_db_uri is __default_db:
    print("Info: no SQLALCHEMY_DATABASE_URI provided, using in-memory database")

config = load_user_config()
config['admin_db_uri'] = __admin_db_uri

for k, v in config.items():
    globals()[k] = v

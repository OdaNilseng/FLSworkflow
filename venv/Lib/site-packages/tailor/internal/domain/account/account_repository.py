# -*- coding: utf-8 -*-
from typing import List, Optional

from tailor.internal.domain.postgres import BaseRepository
from tailor.internal.domain.postgres.models import AccountDao


class AccountRepository(BaseRepository):

    def __init__(self, session=None):
        super().__init__()
        if session:
            #  Used for tests
            self._session = session

    def find_by_id(self, db_id: int) -> AccountDao:
        return self._session.query(AccountDao).filter_by(id=db_id).first()

    def insert(self, entity: AccountDao) -> AccountDao:
        self._session.add(entity)
        self._session.flush()
        return entity  # with db id

    def find_by_name(self, name: str) -> List[AccountDao]:
        return self._session.query(AccountDao).filter_by(organization_name=name).all()

    def find_by_uuid(self, uuid: str) -> Optional[AccountDao]:
        return self._session.query(AccountDao).filter_by(uuid=uuid).first()

    def find_all(self) -> List[AccountDao]:
        return self._session.query(AccountDao).all()

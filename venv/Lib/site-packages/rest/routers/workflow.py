from typing import List

from fastapi import APIRouter, Depends
from fastapi.params import Path

from rest.cognito.auth import get_authorizations
from rest.cognito.authorizations import Authorizations
from rest.models import WorkflowSummary, Workflow, SingleTaskSummary, SingleTask
from rest.tailor_lib_client import TailorLibClient
from tailor.internal.utils import get_default_project

router = APIRouter()

project_name = get_default_project()
tailor_lib = TailorLibClient(project_name)


@router.get("/workflows",
            summary="Lists the workflows the current user has access to",
            response_model=List[WorkflowSummary])
async def workflow_list(
        authorizations: Authorizations = Depends(
            get_authorizations)) -> List[WorkflowSummary]:
    return tailor_lib.find_workflows(authorizations.projects)


@router.get("/workflows/{wf_id}", summary="Details about the specified workflow",
            response_model=Workflow)
async def workflow_details(wf_id: int = Path(None, description="Workflow ID"),
                           authorizations: Authorizations = Depends(
                               get_authorizations)) -> Workflow:
    return tailor_lib.find_workflow_by_id(wf_id, authorizations.projects)


@router.get("/workflows/{wf_id}/tasks",
            summary="Lists the tasks for the specified workflow",
            response_model=List[SingleTaskSummary])
async def single_task_list(wf_id: int = Path(None, description="Workflow ID"),
                           authorizations: Authorizations = Depends(
                               get_authorizations)
                           ) -> List[SingleTaskSummary]:
    return tailor_lib.find_tasks_by_workflow(wf_id, authorizations.projects)


@router.get("/tasks/{task_id}", summary="Details about the specified task",
            response_model=SingleTask)
async def single_task_details(
        task_id: int = Path(None, description="SingleTask ID"),
        authorizations: Authorizations = Depends(
            get_authorizations)) -> SingleTask:
    return tailor_lib.find_task_by_id(task_id, authorizations.projects)

from typing import List, Optional

from pydantic import BaseModel, Field

from tailor.internal.domain.postgres.models import AccountDao


class Account(BaseModel):
    uuid: str = Field(None, title="unique identifier")
    organization_name: str = Field(None, title="organization name")
    organization_id: str = Field(None,
                                  title="the official registration number of the organization")
    projects: Optional[List[str]] = Field(None,
                                          title="the projects owned by this account, by uuid")
    users: Optional[List[str]] = Field(None,
                                       title="the users who are a member of this account, by uuid")

    @staticmethod
    def from_internal_model(a: AccountDao):
        return Account(uuid=a.uuid,
                       organization_name=a.organization_name,
                       organization_id=a.organization_id,
                       projects=[p.uuid for p in a.projects],
                       users=[u.uuid for u in a.users]
                       )
